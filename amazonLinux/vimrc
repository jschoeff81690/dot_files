
set nocompatible "fixes arrow problems in remote shell
set incsearch "always one line above and below cursor
set hidden	"can change buffers without writing, stores changes
set backspace=indent,eol,start	"makes backspace act like normal
set ruler  
set showcmd
set number		"show line numbers
set showmatch	"show matching parenthesis
set autoindent
set smartindent
set wrap

set shiftwidth=4	"spaces to autoindent
set tabstop=4	"tab = 4 spaces


set history=1000 	"commands and search history
set undolevels=1000	"number o fhistory for undo

set nobackup
set noswapfile

filetype plugin on
syntax on
execute pathogen#infect()
colorscheme distinguished

"with a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
 nnoremap ; :
 let mapleader = ","
 let g:mapleader = ","

" Fast saving
nmap <leader>w :w!<cr>
nmap <leader>q :q!<cr>
nmap <leader>wq :wq!<cr>


"Fast Buffers
nnoremap <Leader>p :bp<cr>
nnoremap <Leader>n :bn<cr>
nnoremap <Leader>1 :1b<cr>
nnoremap <Leader>2 :2b<cr>
nnoremap <Leader>3 :3b<cr>
nnoremap <Leader>4 :4b<cr>
nnoremap <Leader>5 :5b<cr>
nnoremap <Leader>6 :6b<cr>
nnoremap <Leader>7 :7b<cr>
nnoremap <Leader>8 :8b<cr>
nnoremap <Leader>9 :9b<cr>
nnoremap <Leader>0 :10b<cr>

"Fast Search and replace
nmap fr :%s/


"EASYMOTION MAPS
" Gif config
 map  / <Plug>(easymotion-sn)
 omap / <Plug>(easymotion-tn)

" " These `n` & `N` mappings are options. You do not have to map `n` & `N` to
" EasyMotion.
" " Without these mappings, `n` & `N` works fine. (These mappings just provide
" " different highlight method and have some other features )
 map  n <Plug>(easymotion-next)
 map  N <Plug>(easymotion-prev)


"CTRL-P FUZZY FINDER MAPS
nmap ff <c-p>

"NERDTREE
nmap nt :NERDTreeToggle<cr>

"TagBar
nmap tt :TagbarToggle<CR>

"Neocomplete
let g:neocomplete#enable_at_startup = 1
" Use smartcase.
let g:neocomplete#enable_smart_case = 1

" Define dictionary.
let g:neocomplete#sources#dictionary#dictionaries = {
    \ 'default' : '',
    \ 'vimshell' : $HOME.'/.vimshell_hist',
    \ 'scheme' : $HOME.'/.gosh_completions'
        \ }
" Define keyword.
if !exists('g:neocomplete#keyword_patterns')
    let g:neocomplete#keyword_patterns = {}
endif
let g:neocomplete#keyword_patterns['default'] = '\h\w*'

" Recommended key-mappings.
" <CR>: close popup and save indent.
inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
function! s:my_cr_function()
  return neocomplete#close_popup() . "\<CR>"
  " For no inserting <CR> key.
  "return pumvisible() ? neocomplete#close_popup() : "\<CR>"
endfunction

" <TAB>: completion.
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
" <C-h>, <BS>: close popup and delete backword char.
inoremap <expr><C-h> neocomplete#smart_close_popup()."\<C-h>"
inoremap <expr><BS> neocomplete#smart_close_popup()."\<C-h>"
inoremap <expr><C-y>  neocomplete#close_popup()
inoremap <expr><C-e>  neocomplete#cancel_popup()
